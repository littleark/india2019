{"version":3,"sources":["India/Components/Header/Header.js","India/Components/Footer/Footer.js","India/Components/AreaChart/AreaChart.js","India/Components/OverviewAreaChart/OverviewAreaChart.js","India/Components/StreamGraph/StreamGraph.js","India/Components/OverviewSteamGraph/OverviewSteamGraph.js","India/Components/WaveChart/WaveChart.js","India/Helpers/Helpers.js","India/Components/Timeline/Timeline.js","India/Components/LineChart/LineChart.js","India/Components/CompareCandidates/CompareCandidates.js","India/India.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Footer","AreaChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","chart","React","createRef","draw","bind","assertThisInitialized","viewbox","state","paths","series","show","size","h","w","window","addEventListener","pProps","pState","removeEventListener","_this2","coalitions","keys","Series","compareValues","result","forEach","coalition","push","parseInt","timestamp","length","bottomBaseY","scaleX","d3","domain","Math","min","apply","max","range","scaleY","Options","scale","y","area","x","points","y1","y0","curve","basepoints","basepointsPerc","index","day","v","t","name","path","reverse","setState","loading","_this3","svgWrapper","current","offsetHeight","offsetWidth","ref","viewport","preserveAspectRatio","width","height","map","serie","key","d","OverviewAreaChart","endpoint","load","collections","axios","get","withCredentials","then","response","status","data","error","alert","statusText","errormessage","catch","console","log","Components_AreaChart_AreaChart","activity","popularity","StreamGraph","labelsDistance","bullets","labels","lines","Data","child","stackedData","offset","point","centerY","prevX","entry","abs","label","moment","format","x1","x2","y2","distance","line","bullet","textAnchor","alignmentBaseline","dominantBaseline","OverviewSteamGraph","obj","Components_StreamGraph_StreamGraph","WaveChart","borders","articles","circles","topLimit","round","availableHeight2","zero","loopingPoints","slice","i","assign","availableHeight","Articles","article","date_published_timestamp","date_published","source","tags","title","url","cx","cy","r","circle","style","left","href","target","replace","Timeline","timeline","Components_WaveChart_WaveChart","LineChart","margins","xAxis","topBaseY","leftBaseX","rightBaseX","date_short","selectedIndex","CompareCandidates","candidates","Number","MIN_SAFE_INTEGER","candidate","options","Components_LineChart_LineChart","India","Components_Header_Header","Components_OverviewAreaChart_OverviewAreaChart","Components_Timeline_Timeline","Components_OverviewSteamGraph_OverviewSteamGraph","Components_CompareCandidates_CompareCandidates","Components_Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","src_India_India","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.87e84274.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Header.css';\n\nclass Header extends Component {\n  render() {\n    return (\n        <header className=\"Header\">\n          <h1>Header</h1>\n        </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport './Footer.css';\n\nclass Footer extends Component {\n  render() {\n    return (\n        <footer className=\"Footer\">\n          <h1>Footer</h1>\n        </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport './AreaChart.css';\nimport * as d3 from 'd3';\n\nclass AreaChart extends Component {\n  constructor(props) {\n    super(props);\n    this.chart = React.createRef();\n\n    this.draw = this.draw.bind( this );\n    this.viewbox = this.viewbox.bind(this);\n\n    this.state = {\n      paths: {\n        series: []\n      },\n      show: 'numbers',\n      size: {\n        h: 0,\n        w: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener( 'resize', this.viewbox, false );\n    this.viewbox();\n  }\n\n  componentDidUpdate( pProps, pState ) {\n    if ( pProps !== this.props ) {\n      this.viewbox();\n    }\n  }\n  \n  componentWillUnmount() {\n\t\twindow.removeEventListener( 'resize', this.viewbox, false );\n\t}\n\n  draw() {\n    const coalitions = Object.keys( this.props.Series );\n    // Find minX and maxX\n\t  const compareValues = (() => {\n\t    let result = [];\n\t    coalitions.forEach(\n\t      (coalition) => {\n\t        result.push( parseInt( this.props.Series[coalition][ 0 ].timestamp, 10 ) );\n\t        result.push( parseInt( this.props.Series[coalition][ (this.props.Series[coalition].length - 1) ].timestamp, 10 ) );\n\t      });\n\t    return result;\n    })();\n    // Define scaleX and scaleY\n\t  const topBaseY = 0;\n    const bottomBaseY = this.state.size.h - 20;\n    const scaleX = d3.scaleLinear()\n      .domain([\n        Math.min.apply(Math, compareValues ),\n        Math.max.apply(Math, compareValues )\n      ])\n      .range( [ 0, this.state.size.w ] );\n    \n    const scaleY = (() => {\n\t    if ( this.props.Options.scale === 'numbers') {\n\t      return d3.scaleLinear()\n          .domain( [\n            0,\n            this.props.Options.max.y\n          ] )\n          .range( [ bottomBaseY, topBaseY ] );\n\t    } else {\n\t      return d3.scaleLinear()\n          .domain( [ 0, 100 ] )\n          .range( [ bottomBaseY, topBaseY ] );\n\t    }\n\t  })();\n\t  \n\t  // Define area function\n\t  const area = d3.area()\n      .x( points => points.x )\n      .y1( points => points.y )\n      .y0( points => bottomBaseY )\n      .curve( d3.curveBasis );\n      \n    // Declare Basepoints and Points Objects \n    let basepoints = {};\n    let basepointsPerc = {};\n    let points = {};\n    \n    // Init Basepoint object\n    coalitions.forEach(\n      (coalition) => {\n        basepoints[ coalition ] = {};\n        basepointsPerc[ coalition ] = {};\n        points[ coalition ] = [];\n      });\n\n    // Define SVG Areas\n    const series = [];\n    coalitions.forEach(\n      (coalition, index) => {\n        points[coalition] = [];\n        this.props.Series[coalition].forEach(\n          (day) => {\n            basepoints[day.timestamp] = ( basepoints[day.timestamp] ) ? ( basepoints[day.timestamp] + parseInt( day[this.props.Options.y], 10) ) : parseInt( day[this.props.Options.y], 10);\n            basepointsPerc[day.timestamp] = ( basepointsPerc[day.timestamp] ) ? ( basepointsPerc[day.timestamp] + parseInt( day[this.props.Options.y] || 0, 10) ) : parseInt( day[this.props.Options.y] || 0, 10);\n            points[coalition].push({\n              v: day[this.props.Options.y],\n              t: parseInt( day.timestamp , 10 ),\n              x: scaleX( parseInt( day.timestamp, 10 ) ),\n              y: ( this.props.Options.scale === 'numbers') ? scaleY( basepoints[day.timestamp] ) : scaleY( basepointsPerc[day.timestamp] )\n            });\n          });\n        series.push( {\n          name: coalition,\n          path: area( points[coalition] ),\n          points: points[coalition]\n        } )\n      });\n    series.reverse();\n    this.setState( { loading: false, paths: { series: series } } );\n\t}\n\n  viewbox() {\n    let svgWrapper = this.chart.current;\n    let size = {\n      \"h\": svgWrapper.offsetHeight,\n      \"w\": svgWrapper.offsetWidth,\n    }\n    this.setState(\n      { size },\n      () => {\n        this.draw();\n      }\n    );\n  }\n\n  render() {\n    return (\n        <div className=\"AreaChart\" ref={this.chart}>\n          <svg\n            viewport={\"0 0 \" + this.state.size.w + ' ' + this.state.size.h}\n            preserveAspectRatio=\"xMidYMid meet\"\n            width={this.state.size.w}\n            height={this.state.size.h}>\n            <g>\n              {\n                this.state.paths.series.map(\n                  (serie, index) => {\n                    return (\n                      <path\n                        key={serie.name}\n                        d={serie.path}\n                        className={\"area \" + serie.name} />\n                    );\n                  }\n                )\n              }\n            </g>\n          </svg>\n        </div>\n    );\n  }\n}\n\nexport default AreaChart;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport AreaChart from '../AreaChart/AreaChart';\n\nimport './OverviewAreaChart.css';\n\nclass OverviewAreaChart extends Component {\n    \n  constructor( props ) {\n    super(props);\n      \n    this.endpoint = 'https://india.elezioni.io/v0/stats/history';\n    \n    this.load = this.load.bind( this );\n    \n    this.state = {\n      collections: {},\n      loading: true,\n      max: {}\n    }\n  }\n  \n  componentDidMount() {\n    this.load();\n  }\n\t\n\tload() {\n\t  axios.get( this.endpoint, { withCredentials: false } ).then(\n\t    ( response ) => {\n\t      if ( response.status === 200 && !response.data.error ) {\n          this.setState(\n\t          {\n              collections: response.data.data.collections,\n              loading: false,\n              max: response.data.data.max\n            });\n\t      } else {\n\t        alert( 'An error occourred ' + response.statusText + ' ' + response.data.errormessage);\n\t      }\n\t    }\n\t  )\n\t  .catch(\n\t    ( error ) => {\n\t      alert( 'Error ' + error );\n\t      console.log( error );\n\t    }\n\t  );\n\t}\n\t\n\t\n    \n  render() {\n    return (\n      <div className=\"OverviewAreaChart\">\n\n      <h1>OverviewAreaChart Component</h1>\n\n      <h3>Activity</h3>\n       \n       <figure className=\"OverviewAreaChart--chart\">\n        <div className=\"in\">\n          <div className=\"OverviewAreaChart--wrapper\">\n            <AreaChart Series={this.state.collections} Options={ { max: { y: this.state.max.activity }, scale: 'numbers', y: 'activity' } } />\n          </div>\n        </div>\n       </figure>\n\n      <hr />\n\n      <h3>Activity %</h3>\n\n       <figure className=\"OverviewAreaChart--chart\">\n        <div className=\"in\">\n          <div className=\"OverviewAreaChart--wrapper\">\n            <AreaChart Series={this.state.collections} Options={ { max: { y: 100 }, scale: 'perc', y: 'activity_perc' } } />\n          </div>\n        </div>\n       </figure>\n\n       <hr />\n\n       <h3>Popularity</h3>\n       \n       <figure className=\"OverviewAreaChart--chart\">\n        <div className=\"in\">\n          <div className=\"OverviewAreaChart--wrapper\">\n            <AreaChart Series={this.state.collections} Options={ { max: { y: this.state.max.popularity }, scale: 'numbers', y: 'popularity' } } />\n          </div>\n        </div>\n       </figure>\n\n        <hr />\n\n        <h3>Popularity %</h3>\n\n        <figure className=\"OverviewAreaChart--chart\">\n        <div className=\"in\">\n          <div className=\"OverviewAreaChart--wrapper\">\n            <AreaChart Series={this.state.collections} Options={ { max: { y: 100 }, scale: 'perc', y: 'popularity_perc' } } />\n          </div>\n        </div>\n        </figure>\n        <h2>{ ( this.state.loading ? 'loading' : 'loaded' ) } - {this.state.loading}</h2>\n      \n      </div>\n    );\n  }\n}\n\nexport default OverviewAreaChart;\n","import React, { Component } from 'react';\nimport './StreamGraph.css';\nimport * as d3 from 'd3';\nimport * as moment from 'moment';\n\nclass StreamGraph extends Component {\n  constructor(props) {\n    super(props);\n    this.chart = React.createRef();\n\n    this.draw = this.draw.bind( this );\n    this.viewbox = this.viewbox.bind(this);\n\n    this.labelsDistance = 50;\n\n    this.state = {\n      paths: {\n        bullets: [],\n        labels: [],\n        lines: [],\n        series: [],\n      },\n      show: 'numbers',\n      size: {\n        h: 0,\n        w: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener( 'resize', this.viewbox, false );\n    this.viewbox();\n  }\n\n  componentDidUpdate( pProps, pState ) {\n    if ( pProps !== this.props ) {\n      this.viewbox();\n    }\n  }\n  \n  componentWillUnmount() {\n\t\twindow.removeEventListener( 'resize', this.viewbox, false );\n\t}\n\n  draw() {\n    if ( this.props.Data && this.props.Options.show && this.props.Options.show !== '' && this.props.Options.series && this.props.Options.series.length > 0 ) {\n      // Scales\n      const scaleX = d3.scaleLinear()\n        .domain(d3.extent( this.props.Data[ this.props.Options.show ].map( (child) => +child.day )))\n        .range([ 0, this.state.size.w ]);\n      \n      const scaleY = d3.scaleLinear()\n        .domain( [ this.props.Options.max.y, ( -1 * this.props.Options.max.y ) ] )\n        .range([ this.state.size.h, 0 ]);\n\n      // Series\n      const stackedData = d3.stack()\n        .offset( d3.stackOffsetSilhouette )\n        .keys( this.props.Options.series )( this.props.Data[ this.props.Options.show ] );      \n      const area = d3.area()\n        .x( point => scaleX( point.data.day ) )\n        .y0( point => scaleY( point[0] ) )\n        .y1( point => scaleY( point[1] ) )\n        .curve( d3.curveBasis );      \n      const series = [];\n      this.props.Options.series.forEach(\n        ( serie, index ) => {\n          series.push( {\n            name: serie,\n            path: area( stackedData[index] )\n          });\n        }\n      )\n\n      // Days\n      const centerY = this.state.size.h / 2;\n      const labels = [];\n      const lines = [];\n      const bullets = [];\n      const distance = 10;\n      let prevX = 0;\n      this.props.Data[ this.props.Options.show ].forEach(\n        (entry) => {\n          const x = scaleX( entry.day );\n          if ( ( Math.abs( prevX - x ) >= this.labelsDistance ) && ( x <= ( this.state.size.w - this.labelsDistance ) ) ) {\n            labels.push({\n              label: moment( +entry.day * 1000 ).format(\"MMM Do\"),\n              x: x,\n              y: centerY,\n            });\n            lines.push({\n              x1: x,\n              y1: 0,\n              x2: x,\n              y2: centerY - distance\n            });\n            lines.push({\n              x1: x,\n              y1: centerY + distance,\n              x2: x,\n              y2: this.state.size.h\n            });\n            bullets.push({\n              x1: x - (distance / 2),\n              y1: centerY + distance,\n              x2: x + (distance / 2),\n              y2: centerY + distance\n            });\n            bullets.push({\n              x1: x - (distance / 2),\n              y1: centerY - distance,\n              x2: x + (distance / 2),\n              y2: centerY - distance\n            });\n            bullets.push({\n              x1: x - (distance / 2),\n              y1: 0,\n              x2: x + (distance / 2),\n              y2: 0\n            });\n            bullets.push({\n              x1: x - (distance / 2),\n              y1: this.state.size.h,\n              x2: x + (distance / 2),\n              y2: this.state.size.h\n            });\n            prevX = x;\n          }\n        }\n      );\n\n      this.setState( { loading: false, paths: { series, lines, labels, bullets } } );\n    }\n\t}\n\n  viewbox() {\n    let svgWrapper = this.chart.current;\n    let size = {\n      \"h\": svgWrapper.offsetHeight,\n      \"w\": svgWrapper.offsetWidth,\n    }\n    this.setState(\n      { size },\n      () => {\n        this.draw();\n      }\n    );\n  }\n\n  render() {\n    return (\n        <div className=\"StreamGraph\" ref={this.chart}>\n          <svg\n            viewport={\"0 0 \" + this.state.size.w + ' ' + this.state.size.h}\n            preserveAspectRatio=\"xMidYMid meet\"\n            width={this.state.size.w}\n            height={this.state.size.h}>\n            <g>\n              {\n                this.state.paths.series.map(\n                  (serie, index) => {\n                    return (\n                      <path\n                        key={serie.name}\n                        d={serie.path}\n                        className={\"area \" + serie.name} />\n                    );\n                  }\n                )\n              }\n            </g>\n            <g className=\"lines\">\n              {\n                this.state.paths.lines.map(\n                  (line, index) => {\n                    return (\n                      <line\n                        key={index}\n                        x1={line.x1}\n                        y1={line.y1}\n                        x2={line.x2}\n                        y2={line.y2}\n                        className=\"line\" />\n                    );\n                  }\n                )\n              }\n            </g>\n            <g className=\"bullets\">\n              {\n                this.state.paths.bullets.map(\n                  (bullet, index) => {\n                    return (\n                      <line\n                        key={index}\n                        x1={bullet.x1}\n                        y1={bullet.y1}\n                        x2={bullet.x2}\n                        y2={bullet.y2}\n                        className=\"bullet\" />\n                    );\n                  }\n                )\n              }\n            </g>\n            <g className=\"labels\">\n              {\n                this.state.paths.labels.map(\n                  (label, index) => {\n                    return (\n                      <text\n                        key={index}\n                        x={label.x}\n                        y={label.y}\n                        textAnchor=\"middle\"\n                        alignmentBaseline=\"middle\"\n                        dominantBaseline=\"middle\"\n                        className=\"label\">{label.label}</text>\n                    );\n                  }\n                )\n              }\n            </g>\n          </svg>\n        </div>\n    );\n  }\n}\n\nexport default StreamGraph;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport StreamGraph from '../StreamGraph/StreamGraph';\n\nimport './OverviewSteamGraph.css';\n\nclass OverviewSteamGraph extends Component {\n    \n  constructor( props ) {\n    super(props);\n      \n    this.endpoint = 'https://india.elezioni.io/v0/stats/history';\n    \n    this.load = this.load.bind( this );\n    \n    this.state = {\n      coalitions: [],\n      loading: true,\n      max: {},\n      series: []\n    }\n  }\n  \n  componentDidMount() {\n    this.load();\n  }\n\t\n\tload() {\n\t  axios.get( this.endpoint, { withCredentials: false } ).then(\n\t    ( response ) => {\n\t      if ( response.status === 200 && !response.data.error ) {\n          const series = {\n            activity: [],\n            popularity: []\n          };\n          let coalitions = Object.keys( response.data.data.collections );\n          coalitions.forEach(\n            (coalition) => {\n              response.data.data.collections[ coalition ].forEach(\n                ( day, index ) => {\n                  if ( series.activity[ index ]) {\n                    series.activity[ index ][ coalition ] = day.activity;\n                  } else {\n                    let obj = {\n                      day: day.timestamp\n                    };\n                    obj[coalition] = day.activity;\n                    series.activity.push(obj);\n                  }\n                  if ( series.popularity[ index ]) {\n                    series.popularity[ index ][ coalition ] = day.popularity;\n                  } else {\n                    let obj = {\n                      day: day.timestamp\n                    };\n                    obj[coalition] = day.popularity;\n                    series.popularity.push(obj);\n                  }\n                });\n            });\n          this.setState(\n\t          {\n              coalitions,\n              loading: false,\n              max: response.data.data.max,\n              series: series\n            });\n\t      } else {\n\t        alert( 'An error occourred ' + response.statusText + ' ' + response.data.errormessage);\n\t      }\n\t    }\n\t  )\n\t  .catch(\n\t    ( error ) => {\n\t      alert( 'Error ' + error );\n\t      console.log( error );\n\t    }\n\t  );\n\t}\n\t\n\t\n    \n  render() {\n    return (\n      <div className=\"OverviewSteamGraph\">\n\n        <h1>OverviewSteamgraph Component</h1>\n      \n        <h3>StreamGraph Activity</h3>\n        <figure className=\"OverviewSteamGraph--chart\">\n          <div className=\"in\">\n            <div className=\"OverviewSteamGraph--wrapper\">\n              <StreamGraph Data={this.state.series} Options={ { max: { y: this.state.max.activity }, show: 'activity', series: this.state.coalitions } } />\n            </div>\n          </div>\n        </figure>\n\n      \n        <h3>StreamGraph Popularity</h3>\n        <figure className=\"OverviewSteamGraph--chart\">\n          <div className=\"in\">\n            <div className=\"OverviewSteamGraph--wrapper\">\n              <StreamGraph Data={this.state.series} Options={ { max: { y: this.state.max.popularity }, show: 'popularity', series: this.state.coalitions } } />\n            </div>\n          </div>\n        </figure>\n        \n        <h2>{ ( this.state.loading ? 'loading' : 'loaded' ) }</h2>\n      \n      </div>\n    );\n  }\n}\n\nexport default OverviewSteamGraph;\n","import React, { Component } from 'react';\nimport './WaveChart.css';\n\nimport { createAbstract } from '../../Helpers/Helpers.js';\nimport * as moment from 'moment';\nimport * as d3 from 'd3';\n\nclass WaveChart extends Component {\n  constructor(props) {\n    super(props);\n    this.chart = React.createRef();\n\n    this.draw = this.draw.bind( this );\n    this.viewbox = this.viewbox.bind(this);\n\n    this.borders = 10;\n    this.labelsDistance = 100;\n\n    this.state = {\n      paths: {\n        articles: [],\n        circles: [],\n        labels: [],\n        lines: [],\n        series: []\n      },\n      show: 'numbers',\n      size: {\n        h: 0,\n        w: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener( 'resize', this.viewbox, false );\n  }\n\n  componentDidUpdate( pProps, pState ) {\n    if ( pProps !== this.props ) {\n      this.viewbox();\n    }\n  }\n  \n  componentWillUnmount() {\n\t\twindow.removeEventListener( 'resize', this.viewbox, false );\n\t}\n\n  draw() {\n    const coalitions = Object.keys( this.props.Series );\n    // Find minX and maxX\n\t  const compareValues = (() => {\n\t    let result = [];\n\t    coalitions.forEach(\n\t      (coalition) => {\n\t        result.push( parseInt( this.props.Series[coalition][ 0 ].timestamp, 10 ) );\n\t        result.push( parseInt( this.props.Series[coalition][ (this.props.Series[coalition].length - 1) ].timestamp, 10 ) );\n\t      });\n\t    return result;\n    })();\n    // Define scaleX and scaleY\n\t  const scaleX = d3.scaleLinear()\n      .domain([\n        Math.min.apply(Math, compareValues ),\n        Math.max.apply(Math, compareValues )\n      ])\n      .range( [ 0, this.state.size.w ] );\n      \n    // Declare Basepoints and Points Objects \n    let points = {};\n    \n    // Init Basepoint object\n    \n    // Define SVG Areas    \n    const series = [];\n    // Popularity\n    coalitions.forEach(\n      (coalition, index) => {\n        points[coalition] = [];\n        const availableHeight = Math.round( ( this.state.size.h ) / coalitions.length );\n        const topLimit = ( index * availableHeight );\n        \n        const availableHeight2 = Math.round( ( this.state.size.h - ( this.borders * 2 ) ) / coalitions.length );\n        const topLimit2 = this.borders + ( index * availableHeight2 );\n        const zero = topLimit2 + Math.round( availableHeight2 / 2 );\n\n        points[coalition] = [];\n        const scaleY = d3.scaleLinear()\n          .domain( [\n            0,\n            this.props.Options.max.y2\n          ] )\n          .range( [ zero, topLimit ] );\n\n        // Define area function\n        const area = d3.area()\n          .x( points => points.x )\n          .y1( points => points.y )\n          .y0( points => zero )\n          .curve( d3.curveBasis );\n        \n        this.props.Series[coalition].forEach(\n          (day) => {\n            points[coalition].push({\n              v: day[this.props.Options.y2],\n              t: parseInt( day.timestamp , 10 ),\n              x: scaleX( parseInt( day.timestamp, 10 ) ),\n              y: scaleY( day[this.props.Options.y2] )\n            });\n          });\n        const loopingPoints = points[coalition].slice(0);\n        for ( let i = (loopingPoints.length - 1); i >=0; i--) {\n          let point = Object.assign({}, loopingPoints[i] );\n          point.y = -1 * point.y;\n          points[coalition].push({\n            v: point.v,\n            t: point.t,\n            x: point.x,\n            y: scaleY( point.v * -1 )\n          });\n        }\n        series.push( {\n          name: coalition + '-popularity',\n          path: area( points[coalition] ),\n          points: points[coalition]\n        } )\n      });\n    // Activity\n    coalitions.forEach(\n      (coalition, index) => {\n        const availableHeight = Math.round( ( this.state.size.h - ( this.borders * 2 ) ) / coalitions.length );\n        const topLimit = this.borders + ( index * availableHeight );\n        const zero = topLimit + Math.round( availableHeight / 2 );\n        points[coalition] = [];\n        const scaleY = d3.scaleLinear()\n          .domain( [\n            0,\n            this.props.Options.max.y1\n          ] )\n          .range( [ zero, topLimit ] );\n\n        // Define area function\n        const area = d3.area()\n          .x( points => points.x )\n          .y1( points => points.y )\n          .y0( points => zero )\n          .curve( d3.curveBasis );\n        \n        this.props.Series[coalition].forEach(\n          (day) => {\n            points[coalition].push({\n              v: day[this.props.Options.y1],\n              t: parseInt( day.timestamp , 10 ),\n              x: scaleX( parseInt( day.timestamp, 10 ) ),\n              y: scaleY( day[this.props.Options.y1] )\n            });\n          });\n        const loopingPoints = points[coalition].slice(0);\n        for ( let i = (loopingPoints.length - 1); i >=0; i--) {\n          let point = Object.assign({}, loopingPoints[i] );\n          point.y = -1 * point.y;\n          points[coalition].push({\n            v: point.v,\n            t: point.t,\n            x: point.x,\n            y: scaleY( point.v * -1 )\n          });\n        }\n        series.push( {\n          name: coalition,\n          path: area( points[coalition] ),\n          points: points[coalition]\n        } )\n      });\n    // Lines and labels\n    const lines = [];\n    const labels = [];\n    const articles = [];\n    const circles = [];\n    let prevX = 0;\n    this.props.Articles.forEach(\n      ( article ) => {\n        let x = scaleX( parseInt( article.date_published_timestamp, 10 ) );\n        let y1 = this.borders;\n        let y2 = this.state.size.h  - this.borders;\n        if ( ( ( lines.length === 0 ) || ( Math.abs( x - prevX ) >= this.labelsDistance ) ) && ( x < ( this.state.size.w - this.labelsDistance ) ) && ( x >= this.labelsDistance ) ) {\n          lines.push({\n            x1: x,\n            x2: x,\n            y1: y1 + 10,\n            y2: y2\n          });\n          labels.push({\n            label: moment( article.date_published).format(\"MMM Do\"),\n            x: x,\n            y: y1\n          });\n          articles.push({\n            source: article.source,\n            tags: article.tags,\n            title: article.title,\n            url: article.url,\n            x: x\n          });\n          circles.push({\n            cx: x,\n            cy: y2,\n            r: 2\n          });\n          prevX = x;\n        }\n      });\n    this.setState( { loading: false, paths: { articles, circles, labels, lines, series } } );\n\t}\n\n  viewbox() {\n    let svgWrapper = this.chart.current;\n    let size = {\n      \"h\": svgWrapper.offsetHeight,\n      \"w\": svgWrapper.offsetWidth,\n    }\n    this.setState(\n      { size },\n      () => {\n        this.draw();\n      }\n    );\n  }\n\n  render() {\n    return (\n        <div className=\"WaveChart\">\n            <div className=\"WaveChart--chart\" ref={this.chart}>\n              <svg\n                viewport={\"0 0 \" + this.state.size.w + ' ' + this.state.size.h}\n                preserveAspectRatio=\"xMidYMid meet\"\n                width={this.state.size.w}\n                height={this.state.size.h}>\n                <g className=\"series\">\n                  {\n                    this.state.paths.series.map(\n                      (serie, index) => {\n                        return (\n                          <path\n                            key={serie.name}\n                            d={serie.path}\n                            className={\"area \" + serie.name} />\n                        );\n                      }\n                    )\n                  }\n                </g>\n                <g className=\"lines\">\n                  {\n                    this.state.paths.lines.map(\n                      (line, index) => {\n                        return (\n                          <line\n                            key={index}\n                            x1={line.x1}\n                            x2={line.x2}\n                            y1={line.y1}\n                            y2={line.y2}\n                            className=\"line\" />\n                        );\n                      }\n                    )\n                  }\n                </g>\n                <g className=\"circles\">\n                  {\n                    this.state.paths.circles.map(\n                      (circle, index) => {\n                        return (\n                          <circle\n                            key={index}\n                            cx={circle.cx}\n                            cy={circle.cy}\n                            r={circle.r}\n                            className=\"circle\" />\n                        );\n                      }\n                    )\n                  }\n                </g>\n                <g className=\"labels\">\n                  {\n                    this.state.paths.labels.map(\n                      (label, index) => {\n                        return (\n                          <text\n                            key={index}\n                            x={label.x}\n                            y={label.y}\n                            textAnchor=\"middle\"\n                            alignmentBaseline=\"middle\"\n                            dominantBaseline=\"middle\"\n                            className=\"label\">{label.label}</text>\n                        );\n                      }\n                    )\n                  }\n                </g>\n              </svg>\n            </div>\n            <div className=\"WaveChart--Articles\">\n              {\n                this.state.paths.articles.map(\n                  (article, index) => {\n                    return (\n                      <article\n                        className=\"article\"\n                        key={index}\n                        style={{ 'left': article.x + 'px' }}>\n                        <a href={article.url} target=\"_article\">{createAbstract( article.title )}</a>\n                      </article>\n                    );\n                  }\n                )\n              }\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default WaveChart;\n","export function createAbstract( t ) {\n\tlet output = t.replace(/\\r?\\n|\\r/g,' ').replace(/^(.{75}[^\\s]*).*/, \"$1\") + '…';\n\treturn output;\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport WaveChart from '../WaveChart/WaveChart';\n\nimport './Timeline.css';\n\nclass Timeline extends Component {\n    \n  constructor( props ) {\n    super(props);\n      \n    this.endpoint = 'https://india.elezioni.io/v0/timeline';\n    \n    this.load = this.load.bind( this );\n    \n    this.state = {\n      articles: [],\n      collections: {},\n      loading: true,\n      max: {}\n    }\n  }\n  \n  componentDidMount() {\n    this.load();\n  }\n\t\n\tload() {\n\t  axios.get( this.endpoint, { withCredentials: false } ).then(\n\t    ( response ) => {\n\t      if ( response.status === 200 && !response.data.error ) {\n          console.log(response.data);\n\t        this.setState(\n\t          {\n              articles: response.data.data.articles,\n              collections: response.data.data.timeline.collections,\n              loading: false,\n              max: response.data.data.timeline.max\n\t          }\n\t        );\n\t      } else {\n\t        alert( 'An error occourred ' + response.statusText + ' ' + response.data.errormessage);\n\t      }\n\t    }\n\t  )\n\t  .catch(\n\t    ( error ) => {\n\t      alert( 'Error ' + error );\n\t      console.log( error );\n\t    }\n\t  );\n\t}\n\t\n\t\n    \n  render() {\n    return (\n      <div className=\"Timeline\">\n\n      <h1>Timeline Component</h1>\n       \n       <figure className=\"Timeline--chart\">\n        <div className=\"in\">\n          <div className=\"Timeline--wrapper\">\n            <WaveChart Series={this.state.collections} Articles={this.state.articles} Options={ { max: { y1: this.state.max.activity, y2: this.state.max.popularity }, y1: 'activity', y2: 'popularity' } } />\n          </div>\n        </div>\n       </figure>\n       \n       <h2>{ ( this.state.loading ? 'loading' : 'loaded' ) }</h2>\n       \n      </div>\n    );\n  }\n}\n\nexport default Timeline;\n","import React, { Component } from 'react';\nimport './LineChart.css';\nimport * as d3 from 'd3';\nimport * as moment from 'moment';\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.chart = React.createRef();\n\n    this.draw = this.draw.bind( this );\n    this.viewbox = this.viewbox.bind(this);\n\n    this.margins = [ 10, 0, 30, 0 ];\n    this.labelsDistance = 40;\n\n    this.state = {\n      paths: {\n        bullets: [],\n        labels: [],\n        lines: [],\n        series: [],\n        xAxis: {}\n      },\n      size: {\n        h: 0,\n        w: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener( 'resize', this.viewbox, false );\n    this.viewbox();\n  }\n\n  componentDidUpdate( pProps, pState ) {\n    if ( pProps !== this.props ) {\n      this.viewbox();\n    }\n  }\n  \n  componentWillUnmount() {\n\t\twindow.removeEventListener( 'resize', this.viewbox, false );\n\t}\n\n  draw() {\n    if ( this.props.Series && this.props.Series.length > 0 && this.props.Options ) {\n      // Define scaleX and scaleY\n      const topBaseY = this.margins[0];\n      const bottomBaseY = this.state.size.h - this.margins[2];\n      const leftBaseX = this.margins[3];\n      const rightBaseX = this.state.size.w - this.margins[1];\n\n      const scaleX = d3.scaleLinear()\n        .domain(d3.extent( this.props.Series[ this.props.Options.index ].timeline.map( (child) => +child.timestamp )))\n        .range( [ leftBaseX, rightBaseX ] );\n      \n      const scaleY = d3.scaleLinear()\n        .domain( [ 0, this.props.Options.max[ this.props.Options.show ] ] )\n        .range( [ bottomBaseY, topBaseY ] );\n      \n      const line = d3.line()\n        .x( point => point.x )\n        .y( point => point.y )\n        .curve( d3.curveBasis );\n      \n      // Define SVG Areas\n      const series = [];\n      this.props.Series.forEach(\n        (serie, index) => {\n          const points = [];\n          serie.timeline.forEach(\n            ( day ) => {\n              points.push({\n                x: scaleX( day.timestamp ),\n                y: scaleY( day[ this.props.Options.show ] )\n              });\n            }\n          );\n          series.push( {\n            name: serie.name || '',\n            className: serie.className || '',\n            path: line( points ),\n            points: points\n          } )\n        });\n      // Define Axis\n      const xAxis = {\n        x1: this.margins[3],\n        y1: scaleY(0),\n        x2: this.state.size.w - this.margins[1],\n        y2: scaleY(0)\n      }\n      // Lines and labels\n      const lines = [];\n      const labels = [];\n      const bullets = [];\n      let prevX = 0;\n      this.props.Series[ this.props.Options.index ].timeline.forEach(\n        ( day ) => {\n          let x = scaleX( parseInt( day.timestamp, 10 ) );\n          let y1 = this.margins[0];\n          let y2 = this.state.size.h  - this.margins[2];\n          if ( ( ( lines.length === 0 ) || ( Math.abs( x - prevX ) >= this.labelsDistance ) ) && ( x < ( this.state.size.w - this.labelsDistance ) ) && ( x >= this.labelsDistance ) ) {\n            lines.push({\n              x1: x,\n              x2: x,\n              y1: y1,\n              y2: y2 + 10\n            });\n            bullets.push({\n              cx: x,\n              cy: y2 + 10,\n              r: 2\n            });\n            labels.push({\n              label: moment( day.date_short ).format(\"DD/MM\"),\n              x: x,\n              y: y2 + 25\n            });\n            prevX = x;\n          }\n        });\n      console.log( lines );\n      this.setState( { loading: false, paths: { bullets, labels, lines, series, xAxis } } );\n    }\n\t}\n\n  viewbox() {\n    let svgWrapper = this.chart.current;\n    let size = {\n      \"h\": svgWrapper.offsetHeight,\n      \"w\": svgWrapper.offsetWidth,\n    }\n    this.setState(\n      { size },\n      () => {\n        this.draw();\n      }\n    );\n  }\n\n  render() {\n    console.log( this.state.paths.lines );\n    const selectedIndex = this.props.Options.index || 0;\n    return (\n        <div className=\"LineChart\" ref={this.chart}>\n          <svg\n            viewport={\"0 0 \" + this.state.size.w + ' ' + this.state.size.h}\n            preserveAspectRatio=\"xMidYMid meet\"\n            width={this.state.size.w}\n            height={this.state.size.h}>\n            <g>\n            {\n                this.state.paths.lines.map(\n                  (line, index) => {\n                    return (\n                      <line\n                        key={index}\n                        x1={line.x1}\n                        y1={line.y1}\n                        x2={line.x2}\n                        y2={line.y2}\n                        className=\"dateLine\" />\n                    );\n                  }\n                )\n              }\n            </g>\n            <g>\n              {\n                this.state.paths.series.map(\n                  (serie, index) => {\n                    return (\n                      <path\n                        key={serie.className}\n                        d={serie.path}\n                        className={\"line \" + ( ( index === selectedIndex ) ? 'selected ' : '' ) + serie.className} />\n                    );\n                  }\n                )\n              }\n            </g>\n            <g>\n              <line\n                x1={this.state.paths.xAxis.x1}\n                y1={this.state.paths.xAxis.y1}\n                x2={this.state.paths.xAxis.x2}\n                y2={this.state.paths.xAxis.y2}\n                className=\"xAxis\" />\n            </g>\n            <g>\n            {\n                this.state.paths.bullets.map(\n                  (bullet, index) => {\n                    return (\n                      <circle\n                        key={index}\n                        cx={bullet.cx}\n                        cy={bullet.cy}\n                        r={bullet.r}\n                        className=\"bullet\" />\n                    );\n                  }\n                )\n              }\n            </g>\n            <g>\n              {\n                this.state.paths.labels.map(\n                  (label, index) => {\n                    return (\n                      <text\n                        key={index}\n                        x={label.x}\n                        y={label.y}\n                        textAnchor=\"middle\"\n                        alignmentBaseline=\"top\"\n                        dominantBaseline=\"top\"\n                        className=\"label\">{label.label}</text>\n                    );\n                  }\n                )\n              }\n            </g>\n          </svg>\n        </div>\n    );\n  }\n}\n\nexport default LineChart;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport LineChart from '../LineChart/LineChart';\n\nimport './CompareCandidates.css';\n\nclass CompareCandidates extends Component {\n    \n  constructor( props ) {\n    super(props);\n      \n    this.endpoint = 'https://india.elezioni.io/v0/stats/candidates';\n    \n    this.load = this.load.bind( this );\n    \n    this.state = {\n      candidates: [],\n      loading: true,\n      max: {\n        activity: 0,\n        day: 0,\n        popularity: 0,\n      }\n    }\n  }\n  \n  componentDidMount() {\n    this.load();\n  }\n\t\n\tload() {\n\t  axios.get( this.endpoint, { withCredentials: false } ).then(\n\t    ( response ) => {\n\t      if ( response.status === 200 && !response.data.error ) {\n          console.log(response.data);\n          const max = {\n            activity: Number.MIN_SAFE_INTEGER,\n            popularity: Number.MIN_SAFE_INTEGER,\n            day: Number.MIN_SAFE_INTEGER\n          }\n\n          // find max \n          response.data.data.forEach(\n            ( candidate ) => {\n              candidate.timeline.forEach(\n                ( day ) => {\n                  if ( day.timestamp > max.day ) {\n                    max.day = day.timestamp;\n                  }\n                  if ( day.activity > max.activity ) {\n                    max.activity = day.activity;\n                  }\n                  if ( day.popularity > max.popularity ) {\n                    max.popularity = day.popularity;\n                  }\n                }\n              );\n            }\n          );\n\n\n\t        this.setState(\n\t          {\n              candidates: response.data.data,\n              loading: false,\n              max\n\t          }\n\t        );\n\t      } else {\n\t        alert( 'An error occourred ' + response.statusText + ' ' + response.data.errormessage);\n\t      }\n\t    }\n\t  )\n\t  .catch(\n\t    ( error ) => {\n\t      alert( 'Error ' + error );\n\t      console.log( error );\n\t    }\n\t  );\n  }\n  \n  render() {\n    let candidates = this.state.candidates;\n    let max = this.state.max;\n    return (\n      <div className=\"CompareCandidates\">\n      {\n        this.state.candidates.map(\n          ( candidate, index ) => {\n            let options = {\n              index,\n              max,\n              show: 'activity'\n            };\n            return (\n              <div\n                key={candidate.name}\n                className={\"CompareCandidates--candidate \" + candidate.className}>\n                  <h2>{candidate.name}</h2>\n                  <figure className=\"CompareCandidates--chart\">\n                    <LineChart Series={candidates} Options={options}/>\n                  </figure>\n              </div>\n            )\n          }\n        )\n      }\n      </div>\n    );\n  }\n}\n\nexport default CompareCandidates;\n","import React, { Component } from 'react';\nimport './India.css';\n\nimport Header from './Components/Header/Header';\nimport Footer from './Components/Footer/Footer';\n\nimport OverviewAreaChart from './Components/OverviewAreaChart/OverviewAreaChart';\nimport OverviewSteamGraph from './Components/OverviewSteamGraph/OverviewSteamGraph';\nimport Timeline from './Components/Timeline/Timeline';\nimport CompareCandidates from './Components/CompareCandidates/CompareCandidates';\n\nclass India extends Component {\n  render() {\n    return (\n      <div className=\"India\">\n        <Header />\n        <hr />\n        \n        <OverviewAreaChart />\n        \n        <hr />\n        \n        <Timeline />\n\n        <hr />\n\n        <OverviewSteamGraph />\n        \n        <hr />\n\n        <CompareCandidates />\n        \n        <hr />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default India;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport India from './India/India';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<India />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}